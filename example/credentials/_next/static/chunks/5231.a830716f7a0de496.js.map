{"version":3,"file":"static/chunks/5231.a830716f7a0de496.js","mappings":"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","sources":["webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.mjs","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-browser/native.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-browser/rng.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-browser/stringify.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-browser/v4.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js","webpack://_N_E/../../node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.js"],"sourcesContent":["import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export function isLegacyTransactionInstance(transaction) {\n    return transaction.version === undefined;\n}\nexport function serializeTransaction(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serialize({\n            verifySignatures: false,\n            requireAllSignatures: false\n        })\n        : transaction.serialize();\n}\nexport function serializeTransactionMessage(transaction) {\n    return isLegacyTransactionInstance(transaction)\n        ? transaction.serializeMessage()\n        : transaction.message.serialize();\n}\nexport function addSignature(transaction, publicKey, signature) {\n    if (isLegacyTransactionInstance(transaction)) {\n        transaction.addSignature(publicKey, Buffer.from(signature));\n    }\n    else {\n        const signerPubkeys = transaction.message.staticAccountKeys.slice(0, transaction.message.header.numRequiredSignatures);\n        const signerIndex = signerPubkeys.findIndex((pubkey) => pubkey.equals(publicKey));\n        if (signerIndex >= 0) {\n            transaction.signatures[signerIndex] = signature;\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function isSnapSupported(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield provider.request({ method: 'wallet_getSnaps' });\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    });\n}\nexport function detectProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const provider = window.ethereum;\n            if (!provider) {\n                return null;\n            }\n            if (provider.providers && Array.isArray(provider.providers)) {\n                const providers = provider.providers;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (provider.detected && Array.isArray(provider.detected)) {\n                const providers = provider.detected;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (yield isSnapSupported(provider)) {\n                return provider;\n            }\n            return null;\n        }\n        catch (error) {\n            console.error(error);\n            return null;\n        }\n    });\n}\n","// This is copied from @solana/wallet-standard-chains\n/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */\nexport const SOLANA_MAINNET_CHAIN = 'solana:mainnet';\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */\nexport const SOLANA_DEVNET_CHAIN = 'solana:devnet';\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */\nexport const SOLANA_TESTNET_CHAIN = 'solana:testnet';\n/** Solana Localnet cluster, e.g. http://localhost:8899 */\nexport const SOLANA_LOCALNET_CHAIN = 'solana:localnet';\n/** Array of all Solana clusters */\nexport const SOLANA_CHAINS = [\n    SOLANA_MAINNET_CHAIN,\n    SOLANA_DEVNET_CHAIN,\n    SOLANA_TESTNET_CHAIN,\n    SOLANA_LOCALNET_CHAIN\n];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */\nexport function isSolanaChain(chain) {\n    return SOLANA_CHAINS.includes(chain);\n}\n","// This is copied with modification from @wallet-standard/wallet\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _StandardSolflareMetaMaskWalletAccount_address, _StandardSolflareMetaMaskWalletAccount_publicKey, _StandardSolflareMetaMaskWalletAccount_chains, _StandardSolflareMetaMaskWalletAccount_features, _StandardSolflareMetaMaskWalletAccount_label, _StandardSolflareMetaMaskWalletAccount_icon;\nimport { SolanaSignAndSendTransaction, SolanaSignMessage, SolanaSignTransaction } from '@solana/wallet-standard-features';\nimport { SOLANA_CHAINS } from './solana.js';\nconst chains = SOLANA_CHAINS;\nconst features = [SolanaSignAndSendTransaction, SolanaSignTransaction, SolanaSignMessage];\nexport class StandardSolflareMetaMaskWalletAccount {\n    get address() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_address, \"f\");\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, \"f\").slice();\n    }\n    get chains() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_chains, \"f\").slice();\n    }\n    get features() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_features, \"f\").slice();\n    }\n    get label() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_label, \"f\");\n    }\n    get icon() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_icon, \"f\");\n    }\n    constructor({ address, publicKey, label, icon }) {\n        _StandardSolflareMetaMaskWalletAccount_address.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_publicKey.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_chains.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_features.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_label.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_icon.set(this, void 0);\n        if (new.target === StandardSolflareMetaMaskWalletAccount) {\n            Object.freeze(this);\n        }\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_address, address, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, publicKey, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_chains, chains, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_features, features, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_label, label, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_icon, icon, \"f\");\n    }\n}\n_StandardSolflareMetaMaskWalletAccount_address = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_publicKey = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_chains = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_features = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_label = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_icon = new WeakMap();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';\nimport EventEmitter from 'eventemitter3';\nimport bs58 from 'bs58';\nimport { v4 as uuidv4 } from 'uuid';\nimport { isLegacyTransactionInstance, serializeTransaction } from './utils';\nimport { detectProvider } from './detectProvider';\nimport { StandardSolflareMetaMaskWalletAccount } from './standard/account';\nimport { isSolanaChain } from './standard/solana';\nexport * from './types';\nexport * from './standard/account';\nclass SolflareMetaMask extends EventEmitter {\n    constructor(config) {\n        super();\n        this._network = 'mainnet-beta';\n        this._iframeParams = {};\n        this._element = null;\n        this._iframe = null;\n        this._publicKey = null;\n        this._account = null;\n        this._isConnected = false;\n        this._connectHandler = null;\n        this._messageHandlers = {};\n        this._handleEvent = (event) => {\n            var _a, _b;\n            switch (event.type) {\n                case 'connect': {\n                    this._collapseIframe();\n                    if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this._isConnected = true;\n                        if (this._connectHandler) {\n                            this._connectHandler.resolve();\n                            this._connectHandler = null;\n                        }\n                        this._connected();\n                    }\n                    else {\n                        if (this._connectHandler) {\n                            this._connectHandler.reject();\n                            this._connectHandler = null;\n                        }\n                        this._disconnected();\n                    }\n                    return;\n                }\n                case 'disconnect': {\n                    if (this._connectHandler) {\n                        this._connectHandler.reject();\n                        this._connectHandler = null;\n                    }\n                    this._disconnected();\n                    return;\n                }\n                case 'accountChanged': {\n                    if ((_b = event.data) === null || _b === void 0 ? void 0 : _b.publicKey) {\n                        this._publicKey = event.data.publicKey;\n                        this.emit('accountChanged', this.publicKey);\n                        this._standardConnected();\n                    }\n                    else {\n                        this.emit('accountChanged', undefined);\n                        this._standardDisconnected();\n                    }\n                    return;\n                }\n                default: {\n                    return;\n                }\n            }\n        };\n        this._handleResize = (data) => {\n            if (data.resizeMode === 'full') {\n                if (data.params.mode === 'fullscreen') {\n                    this._expandIframe();\n                }\n                else if (data.params.mode === 'hide') {\n                    this._collapseIframe();\n                }\n            }\n            else if (data.resizeMode === 'coordinates') {\n                this._resizeIframe(data.params);\n            }\n        };\n        this._handleMessage = (event) => {\n            var _a;\n            if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.channel) !== 'solflareIframeToWalletAdapter') {\n                return;\n            }\n            const data = event.data.data || {};\n            if (data.type === 'event') {\n                this._handleEvent(data.event);\n            }\n            else if (data.type === 'resize') {\n                this._handleResize(data);\n            }\n            else if (data.type === 'response') {\n                if (this._messageHandlers[data.id]) {\n                    const { resolve, reject } = this._messageHandlers[data.id];\n                    delete this._messageHandlers[data.id];\n                    if (data.error) {\n                        reject(data.error);\n                    }\n                    else {\n                        resolve(data.result);\n                    }\n                }\n            }\n        };\n        this._removeElement = () => {\n            if (this._element) {\n                this._element.remove();\n                this._element = null;\n            }\n        };\n        this._removeDanglingElements = () => {\n            const elements = document.getElementsByClassName('solflare-metamask-wallet-adapter-iframe');\n            for (const element of elements) {\n                if (element.parentElement) {\n                    element.remove();\n                }\n            }\n        };\n        this._injectElement = () => {\n            this._removeElement();\n            this._removeDanglingElements();\n            const params = Object.assign(Object.assign({}, this._iframeParams), { mm: true, v: 1, cluster: this._network || 'mainnet-beta', origin: window.location.origin || '', title: document.title || '' });\n            const queryString = Object.keys(params)\n                .map((key) => `${key}=${encodeURIComponent(params[key])}`)\n                .join('&');\n            const iframeUrl = `${SolflareMetaMask.IFRAME_URL}?${queryString}`;\n            this._element = document.createElement('div');\n            this._element.className = 'solflare-metamask-wallet-adapter-iframe';\n            this._element.innerHTML = `\n      <iframe src='${iframeUrl}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\n    `;\n            document.body.appendChild(this._element);\n            this._iframe = this._element.querySelector('iframe');\n            window.addEventListener('message', this._handleMessage, false);\n        };\n        this._collapseIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '';\n                this._iframe.style.right = '';\n                this._iframe.style.height = '2px';\n                this._iframe.style.width = '2px';\n            }\n        };\n        this._expandIframe = () => {\n            if (this._iframe) {\n                this._iframe.style.top = '0px';\n                this._iframe.style.bottom = '0px';\n                this._iframe.style.left = '0px';\n                this._iframe.style.right = '0px';\n                this._iframe.style.width = '100%';\n                this._iframe.style.height = '100%';\n            }\n        };\n        this._resizeIframe = (params) => {\n            if (!this._iframe) {\n                return;\n            }\n            this._iframe.style.top = isFinite(params.top) ? `${params.top}px` : '';\n            this._iframe.style.bottom = isFinite(params.bottom) ? `${params.bottom}px` : '';\n            this._iframe.style.left = isFinite(params.left) ? `${params.left}px` : '';\n            this._iframe.style.right = isFinite(params.right) ? `${params.right}px` : '';\n            this._iframe.style.width = isFinite(params.width)\n                ? `${params.width}px`\n                : params.width;\n            this._iframe.style.height = isFinite(params.height)\n                ? `${params.height}px`\n                : params.height;\n        };\n        this._sendIframeMessage = (data) => {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            return new Promise((resolve, reject) => {\n                var _a, _b;\n                const messageId = uuidv4();\n                this._messageHandlers[messageId] = { resolve, reject };\n                (_b = (_a = this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                    channel: 'solflareWalletAdapterToIframe',\n                    data: Object.assign({ id: messageId }, data)\n                }, '*');\n            });\n        };\n        this._connected = () => {\n            this._isConnected = true;\n            this.emit('connect', this.publicKey);\n            this._standardConnected();\n        };\n        this._disconnected = () => {\n            this._publicKey = null;\n            this._isConnected = false;\n            window.removeEventListener('message', this._handleMessage, false);\n            this._removeElement();\n            this.emit('disconnect');\n            this._standardDisconnected();\n        };\n        this._standardConnected = () => {\n            if (!this.publicKey) {\n                return;\n            }\n            const address = this.publicKey.toString();\n            if (!this._account || this._account.address !== address) {\n                this._account = new StandardSolflareMetaMaskWalletAccount({\n                    address,\n                    publicKey: this.publicKey.toBytes()\n                });\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        this._standardDisconnected = () => {\n            if (this._account) {\n                this._account = null;\n                this.emit('standard_change', { accounts: this.standardAccounts });\n            }\n        };\n        if (config === null || config === void 0 ? void 0 : config.network) {\n            this._network = config === null || config === void 0 ? void 0 : config.network;\n        }\n        if (window.SolflareMetaMaskParams) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), window.SolflareMetaMaskParams);\n        }\n        if (config === null || config === void 0 ? void 0 : config.params) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), config === null || config === void 0 ? void 0 : config.params);\n        }\n    }\n    get publicKey() {\n        return this._publicKey ? new PublicKey(this._publicKey) : null;\n    }\n    get standardAccount() {\n        return this._account;\n    }\n    get standardAccounts() {\n        return this._account ? [this._account] : [];\n    }\n    get isConnected() {\n        return this._isConnected;\n    }\n    get connected() {\n        return this.isConnected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.connected) {\n                return;\n            }\n            this._injectElement();\n            yield new Promise((resolve, reject) => {\n                this._connectHandler = { resolve, reject };\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._sendIframeMessage({\n                method: 'disconnect'\n            });\n            this._disconnected();\n        });\n    }\n    signTransaction(transaction) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = serializeTransaction(transaction);\n                const response = yield this._sendIframeMessage({\n                    method: 'signTransactionV2',\n                    params: {\n                        transaction: bs58.encode(serializedTransaction)\n                    }\n                });\n                const { transaction: signedTransaction } = response;\n                return isLegacyTransactionInstance(transaction) ? Transaction.from(bs58.decode(signedTransaction)) : VersionedTransaction.deserialize(bs58.decode(signedTransaction));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transaction');\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransactions = transactions.map((transaction) => serializeTransaction(transaction));\n                const { transactions: signedTransactions } = yield this._sendIframeMessage({\n                    method: 'signAllTransactionsV2',\n                    params: {\n                        transactions: serializedTransactions.map((transaction) => bs58.encode(transaction))\n                    }\n                });\n                return signedTransactions.map((signedTransaction, index) => {\n                    return isLegacyTransactionInstance(transactions[index]) ? Transaction.from(bs58.decode(signedTransaction)) : VersionedTransaction.deserialize(bs58.decode(signedTransaction));\n                });\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign transactions');\n            }\n        });\n    }\n    signAndSendTransaction(transaction, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const serializedTransaction = serializeTransaction(transaction);\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signAndSendTransaction',\n                    params: {\n                        transaction: bs58.encode(serializedTransaction),\n                        options\n                    }\n                });\n                return signature;\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign and send transaction');\n            }\n        });\n    }\n    signMessage(data, display = 'utf8') {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected || !this.publicKey) {\n                throw new Error('Wallet not connected');\n            }\n            try {\n                const { signature } = yield this._sendIframeMessage({\n                    method: 'signMessage',\n                    params: {\n                        data: bs58.encode(data),\n                        display\n                    }\n                });\n                return Uint8Array.from(bs58.decode(signature));\n            }\n            catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || 'Failed to sign message');\n            }\n        });\n    }\n    sign(data, display = 'utf8') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.signMessage(data, display);\n        });\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = yield detectProvider();\n            return !!provider;\n        });\n    }\n    standardSignAndSendTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain, options } = inputs[0];\n                const { minContextSlot, preflightCommitment, skipPreflight, maxRetries } = options || {};\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (!isSolanaChain(chain))\n                    throw new Error('invalid chain');\n                const signature = yield this.signAndSendTransaction(VersionedTransaction.deserialize(transaction), {\n                    preflightCommitment,\n                    minContextSlot,\n                    maxRetries,\n                    skipPreflight\n                });\n                outputs.push({ signature: bs58.decode(signature) });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignAndSendTransaction(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n    standardSignTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                if (chain && !isSolanaChain(chain))\n                    throw new Error('invalid chain');\n                const signedTransaction = yield this.signTransaction(VersionedTransaction.deserialize(transaction));\n                outputs.push({ signedTransaction: signedTransaction.serialize() });\n            }\n            else if (inputs.length > 1) {\n                let chain;\n                for (const input of inputs) {\n                    if (input.account !== this._account)\n                        throw new Error('invalid account');\n                    if (input.chain) {\n                        if (!isSolanaChain(input.chain))\n                            throw new Error('invalid chain');\n                        if (chain) {\n                            if (input.chain !== chain)\n                                throw new Error('conflicting chain');\n                        }\n                        else {\n                            chain = input.chain;\n                        }\n                    }\n                }\n                const transactions = inputs.map(({ transaction }) => VersionedTransaction.deserialize(transaction));\n                const signedTransactions = yield this.signAllTransactions(transactions);\n                outputs.push(...signedTransactions.map((signedTransaction) => ({\n                    signedTransaction: signedTransaction.serialize()\n                })));\n            }\n            return outputs;\n        });\n    }\n    standardSignMessage(...inputs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected)\n                throw new Error('not connected');\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { message, account } = inputs[0];\n                if (account !== this._account)\n                    throw new Error('invalid account');\n                const signature = yield this.signMessage(message);\n                outputs.push({ signedMessage: message, signature });\n            }\n            else if (inputs.length > 1) {\n                for (const input of inputs) {\n                    outputs.push(...(yield this.standardSignMessage(input)));\n                }\n            }\n            return outputs;\n        });\n    }\n}\nSolflareMetaMask.IFRAME_URL = 'https://widget.solflare.com/';\nexport default SolflareMetaMask;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"],"names":["getRandomValues","_StandardSolflareMetaMaskWalletAccount_address","_StandardSolflareMetaMaskWalletAccount_publicKey","_StandardSolflareMetaMaskWalletAccount_chains","_StandardSolflareMetaMaskWalletAccount_features","_StandardSolflareMetaMaskWalletAccount_label","_StandardSolflareMetaMaskWalletAccount_icon","node_modules_eventemitter3","esm_browser_native","randomUUID","crypto","bind","rnds8","Uint8Array","byteToHex","i","push","toString","slice","esm_browser_v4","options","buf","offset","rnds","random","rng","unsafeStringify","arr","isLegacyTransactionInstance","transaction","undefined","version","serializeTransaction","serialize","verifySignatures","requireAllSignatures","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","adopt","then","apply","isSnapSupported","provider","request","method","error","SOLANA_CHAINS","isSolanaChain","chain","includes","__classPrivateFieldGet","receiver","state","kind","f","has","call","get","__classPrivateFieldSet","set","features","signAndSendTransaction","G","signTransaction","R","signMessage","g","StandardSolflareMetaMaskWalletAccount","address","publicKey","chains","label","icon","constructor","Object","freeze","WeakMap","esm_awaiter","SolflareMetaMask","config","_network","_iframeParams","_element","_iframe","_publicKey","_account","_isConnected","_connectHandler","_messageHandlers","_handleEvent","_a","_b","event","type","_collapseIframe","data","_connected","_disconnected","emit","_standardConnected","_standardDisconnected","_handleResize","resizeMode","params","mode","_expandIframe","_resizeIframe","_handleMessage","channel","id","_removeElement","remove","_removeDanglingElements","element","document","getElementsByClassName","parentElement","_injectElement","assign","mm","v","cluster","origin","window","location","title","queryString","keys","map","key","encodeURIComponent","join","iframeUrl","IFRAME_URL","createElement","className","innerHTML","body","appendChild","querySelector","addEventListener","style","top","right","height","width","bottom","left","isFinite","_sendIframeMessage","connected","messageId","contentWindow","postMessage","removeEventListener","toBytes","accounts","standardAccounts","network","SolflareMetaMaskParams","index_browser_esm","PublicKey","standardAccount","isConnected","autoApprove","connect","disconnect","serializedTransaction","signedTransaction","bs58_default","encode","Transaction","from","decode","VersionedTransaction","deserialize","signAllTransactions","transactions","serializedTransactions","signedTransactions","index","signature","display","sign","isSupported","detectProvider","ethereum","providers","Array","isArray","detected","console","standardSignAndSendTransaction","inputs","outputs","length","account","minContextSlot","preflightCommitment","skipPreflight","maxRetries","input","standardSignTransaction","standardSignMessage","message","signedMessage","esm","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","addListener","emitter","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","getOwnPropertySymbols","concat","listeners","handlers","l","ee","listenerCount","a1","a2","a3","a4","a5","args","len","arguments","removeListener","j","on","removeAllListeners","off","prefixed","module","exports"],"sourceRoot":""}